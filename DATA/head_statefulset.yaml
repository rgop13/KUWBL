apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ray-ku-junyoung-head
  namespace: p-ncai-wbl
spec:
  serviceName: ray-ku-junyoung-head
  replicas: 1
  selector:
    matchLabels:
      app: ray-ku-junyoung-head
      ray-cluster: ray-ku-junyoung
  template:
    metadata:
      labels:
        app: ray-ku-junyoung-head
        ray-cluster: ray-ku-junyoung
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      terminationGracePeriodSeconds: 120
      nodeSelector:
        mlx.navercorp.com/zone: h100-i001v8

      # IPv6 비활성화(클러스터에서 unsafe sysctls 허용 필요)
      securityContext:
        runAsNonRoot: true
        runAsUser: 500
        runAsGroup: 500
        fsGroup: 500
        fsGroupChangePolicy: "OnRootMismatch"
        # sysctls:
        #   - name: net.ipv6.conf.all.disable_ipv6
        #     value: "1"
        #   - name: net.ipv6.conf.default.disable_ipv6
        #     value: "1"

      volumes:
        - name: nlpai-data
          persistentVolumeClaim:
            claimName: nlpai-storage
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 128Gi

      containers:
        - name: ray-ku-junyoung-head
          image: sjysjy/ray_serving:0.994
          imagePullPolicy: IfNotPresent

          env:
            - name: MY_POD_IP
              valueFrom: { fieldRef: { fieldPath: status.podIP } }

            # --- 통신 관련 ---
            - { name: NCCL_SOCKET_IFNAME, value: "eth0" }
            - { name: GLOO_SOCKET_IFNAME,  value: "eth0" }
            - { name: NCCL_DEBUG,          value: "INFO" }
            - { name: NCCL_DEBUG_SUBSYS,   value: "INIT,NET" }
            - { name: NCCL_SOCKET_FAMILY,  value: "AF_INET" }
            - { name: TORCH_NCCL_BLOCKING_WAIT, value: "1" }
            - { name: NCCL_ASYNC_ERROR_HANDLING, value: "1" }
            - { name: GLOO_USE_IPV6,       value: "0" }
            - { name: TP_USE_IPV6,         value: "0" }
            - { name: GLOO_USE_LIBUV,      value: "0" }
            - { name: VLLM_USE_V1,         value: "1" }
            - { name: RAY_BACKEND_LOG_LEVEL, value: "debug" }

            # ---- HF 캐시(오프라인/공용 PVC) ----
            - { name: HF_HOME,                value: "/data/data_team/cache/huggingface" }
            - { name: HF_HUB_CACHE,                value: "/data/data_team/cache/huggingface" }
            - { name: TRANSFORMERS_CACHE,     value: "/data/data_team/cache/huggingface/transformers" }
            - { name: HF_DATASETS_CACHE,      value: "/data/data_team/cache/huggingface/datasets" }
            - { name: HF_HUB_ENABLE_HF_TRANSFER, value: "1" }
            # - { name: HF_HUB_OFFLINE,         value: "1" }
            # - { name: TRANSFORMERS_OFFLINE,   value: "1" }
            - { name: VLLM_DOWNLOAD_DIR,      value: "/data/data_team/cache/huggingface" }
            # - { name: RAY_TMPDIR,      value: "/data/ray_tmp" }
            - { name: RAY_VERBOSE, value: "1" }
            - { name: RAY_NAMESPACE, value: "serve" }
            - { name: RAY_CLIENT_RECONNECT_GRACE_PERIOD_S, value: "600" }
            - { name: RAY_CLIENT_SERVER_KEEPALIVE_TIMEOUT_S, value: "120" }

          volumeMounts:
            - { name: nlpai-data, mountPath: /data }
            - { name: dshm,      mountPath: /dev/shm }

          securityContext:  # Infiniband 를 사용하기 위함
            capabilities:
              add: ["IPC_LOCK"]
          
          command: ["/bin/bash", "-lc"]
          args:
            - |
              ray start --head \
                --node-ip-address=${MY_POD_IP} \
                --port=6379 \
                --dashboard-host=0.0.0.0 \
                --num-gpus=0 \
                --block

          ports:
            - { containerPort: 6379,  name: gcs }
            - { containerPort: 8265,  name: dashboard }
            - { containerPort: 10001, name: client }
          
          readinessProbe:
            httpGet:
              path: /api/cluster_status
              port: 8265
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6

          startupProbe:
            httpGet:
              path: /api/cluster_status
              port: 8265
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 60

          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-lc", "ray stop || true"]

          resources:
            limits:
              cpu: 16
              memory: 512Gi
            requests:
              cpu: 16
              memory: 512Gi
